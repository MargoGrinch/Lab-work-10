# 1. Сформувати функцію для введення з клавіатури послідовності чисел і виведення
# її на екран у зворотному порядку (завершаючий символ послідовності – крапка)
# Грінченко Маргарита 1 курс група 122Б

from random import randint
from time import time
from memory_profiler import profile
import sys

@profile
def start():
    in_ll()

def in_ll():
    n = input("Ведіть число, або крапку (крапка, щоб завершити введення): ")

    if n != ".":
        try:
            n = int(n)
        except ValueError:
            print("тільки числа")
        sys.setrecursionlimit(sys.getrecursionlimit() + 1)  # зміна межі рекурсії
        in_ll()
    print(n)

@profile
def contrariwise_cyc():  # функція введення з клавіатури послідовності чисел і виведення
    # її на екран у зворотному порядку циклом
    ll = []  # генерація списку
    while True:
        k = False
        while True:
            try:
                n = input("Ведіть число, або крапку (крапка, щоб завершити введення): ")
                if n == ".":
                    k = True
                    break
                n = int(n)
                break
            except ValueError:
                print("тільки числа")
        ll.append(n)
        if k:
            break
    print("Послідовність у зворотному порядку: ")

    for i in range(len(ll)-1,-1,-1):
        print(ll[i])
        pass

print()
print("функція для для введення з клавіатури послідовності чисел і виведення її на екран у зворотному порядку рекурсією: ")
tic = time()  # час початку роботи функції
start()
toc = time()  # час зупинки функції
print(f"Час роботи функції: {toc - tic}")  # різниця часу - тобто час роботи ф-ї

print()
print("функція для для введення з клавіатури послідовності чисел і виведення її на екран у зворотному порядку циклом: ")
tic = time()  # час початку роботи функції
contrariwise_cyc()
toc = time()  # час зупинки функції
print(f"Час роботи функції: {toc - tic}")  # різниця часу - тобто час роботи ф-ї
# рекурсія скоріше за все працює швидше, але це якщо все авматизовано
# цикл потребує менше пам'яті. Читабельність циклу менша. Реалізація рекурсії простіше
