# 2. Сформувати функцію, що визначатиме чи є задане натуральне число простим.
# Простим називається число, що більше за 1 та не має інших дільників, окрім 1 та самого
# себе).
# Грінченко Маргарита 1 курс група 122Б


from random import randint
from time import time
from memory_profiler import profile
import sys

@profile
def start(n):
    # c = in_ll(n)
    if in_ll(n) == n:
        print("число просте")
    else:
        print("число не просте")


def in_ll(n, d=2):  # функція, що визначатиме чи є задане натуральне число простим, рекурсією
    if n % d == 0:
        return d
    d += 1
    return in_ll(n, d)


@profile
def start_second(n):  # функція, що визначатиме чи є задане натуральне число простим, циклом
    d = 2
    while n % d != 0:
        d += 1
    if d == n:
        print("число просте")
    else:
        print("число не просте")


print()
print("функція, що визначатиме чи є задане натуральне число простим, рекурсією: ")
while True:
    try:
        n = int(input("Ведіть число: "))
        break
    except ValueError:
        print("тільки числа")

tic = time()  # час початку роботи функції
start(n)
toc = time()  # час зупинки функції
print(f"Час роботи функції: {toc - tic}")  # різниця часу - тобто час роботи ф-ї

print()
print("функція, що визначатиме чи є задане натуральне число простим, циклом: ")
while True:
    try:
        n = int(input("Ведіть число: "))
        break
    except ValueError:
        print("тільки числа")
tic = time()  # час початку роботи функції
start_second(n)
toc = time()  # час зупинки функції
print(f"Час роботи функції: {toc - tic}")  # різниця часу - тобто час роботи ф-ї
# цикл працює швидше та потребує менше пам'яті. Читабельність та реалізація в обох випадках не складна
